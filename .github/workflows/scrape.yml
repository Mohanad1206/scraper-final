
name: Scrape & Post
on:
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * *"
permissions:
  contents: write
  pull-requests: write

jobs:
  scrape:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Debug GITHUB_REF
        run: |
          echo "GITHUB_REF=$GITHUB_REF"
          echo "GITHUB_REF_NAME=$GITHUB_REF_NAME"
          git rev-parse --abbrev-ref HEAD || true
          git status || true
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m playwright install --with-deps chromium
      - name: Run scraper
        env:
          PYTHONUNBUFFERED: "1"
        run: |
          mkdir -p out
          timeout 40m python -u -m scraper.run --limit 500 || true
      - name: Ensure and preview output
        run: |
          mkdir -p out data
          touch out/snapshot.jsonl out/snapshot.csv
          echo "---- JSONL size / head ----"
          ls -l out/snapshot.jsonl || true
          wc -l out/snapshot.jsonl || true
          head -n 10 out/snapshot.jsonl || true
          echo "---- CSV size / head ----"
          ls -l out/snapshot.csv || true
          wc -l out/snapshot.csv || true
          head -n 10 out/snapshot.csv || true
      - name: Prepare commit
        run: |
          set -e
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          BRANCH="${GITHUB_REF_NAME:-$(git rev-parse --abbrev-ref HEAD)}"
          echo "Target branch: $BRANCH"
          git checkout "$BRANCH"
          git pull --rebase origin "$BRANCH" || true
          mkdir -p data
          cp out/snapshot.jsonl data/snapshot.jsonl || true
          cp out/snapshot.csv data/snapshot.csv || true
          git add data/snapshot.jsonl data/snapshot.csv || true
          if git diff --cached --quiet; then
            echo "Nothing changed; skipping commit."
            exit 0
          fi
          git commit -m "chore(data): update snapshot [skip ci]"
      - name: Push commit (if allowed)
        id: push_direct
        continue-on-error: true
        run: |
          BRANCH="${GITHUB_REF_NAME:-$(git rev-parse --abbrev-ref HEAD)}"
          echo "Pushing to $BRANCH"
          git push origin HEAD:"$BRANCH"
      - name: Create PR (fallback when branch is protected)
        if: steps.push_direct.outcome == 'failure'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(data): update snapshot"
          title: "Update snapshot data"
          body: "Automated snapshot commit from workflow."
          branch: "bot/update-snapshot"
          base: ${{ github.ref_name }}
          add-paths: |
            data/snapshot.jsonl
            data/snapshot.csv
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: snapshot
          path: |
            out/snapshot.jsonl
            out/snapshot.csv
          if-no-files-found: warn
